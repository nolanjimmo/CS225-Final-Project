module DataTypes where

import Data.Map (Map)

data Expr =
    IntE Integer
  | PlusE Expr Expr
  | TimesE Expr Expr
  | BoolE Bool 
  | OrE Expr Expr
  | IfE Expr Expr Expr
  | NegE Expr
  | LetE String Expr Expr
  | VarE String
  | PairE (Expr, Expr)
  | Fst Expr
  | Snd Expr
  | CaseE Expr String Expr String Expr
  | Left Expr
  | Right Expr
  deriving (Eq,Ord,Show)

data Value =
    IntV Integer
  | BoolV Bool
  | PairV (Value, Value)
  | LeftV Value
  | RightV Value
  deriving(Eq,Ord,Show)


type Env = Map String Expr
